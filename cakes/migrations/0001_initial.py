# Generated by Django 5.0.2 on 2025-08-24 18:30

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CakeShape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'cake_shapes',
            },
        ),
        migrations.CreateModel(
            name='CakeSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('servings', models.IntegerField()),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'cake_sizes',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Frosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('color', models.CharField(blank=True, max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'frostings',
            },
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price_modifier', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'toppings',
            },
        ),
        migrations.CreateModel(
            name='Cake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image', models.ImageField(upload_to='cakes/')),
                ('is_available', models.BooleanField(default=True)),
                ('is_customizable', models.BooleanField(default=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('review_count', models.IntegerField(default=0)),
                ('ingredients', models.JSONField(default=list)),
                ('allergens', models.JSONField(default=list)),
                ('preparation_time', models.CharField(default='2-3 hours', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cakes', to='cakes.category')),
            ],
            options={
                'db_table': 'cakes',
            },
        ),
        migrations.CreateModel(
            name='CustomCake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_message', models.CharField(blank=True, max_length=30)),
                ('design_notes', models.TextField(blank=True)),
                ('reference_image', models.ImageField(blank=True, null=True, upload_to='custom_cakes/')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('base_cake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_versions', to='cakes.cake')),
                ('shape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cakes.cakeshape')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cakes.cakesize')),
                ('frosting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cakes.frosting')),
                ('toppings', models.ManyToManyField(blank=True, to='cakes.topping')),
            ],
            options={
                'db_table': 'custom_cakes',
            },
        ),
    ]
