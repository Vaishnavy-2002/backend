# Generated by Django 4.2.7 on 2025-10-10 19:23

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SeasonalEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Event name (e.g., Valentine's Day)", max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, help_text="Event description"),
                ),
                (
                    "month",
                    models.IntegerField(
                        help_text="Month (1-12)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
                (
                    "day",
                    models.IntegerField(
                        help_text="Day of month (1-31)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(31),
                        ],
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        default=2025, help_text="Year (defaults to current year)"
                    ),
                ),
                (
                    "sales_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("peak", "Peak"),
                        ],
                        default="medium",
                        help_text="Expected sales level",
                        max_length=10,
                    ),
                ),
                (
                    "products",
                    models.TextField(
                        help_text="Associated products (e.g., 'Chocolate cakes, Heart-shaped cakes')"
                    ),
                ),
                (
                    "expected_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Expected revenue for this event",
                        max_digits=10,
                    ),
                ),
                (
                    "growth_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Expected growth rate percentage",
                        max_digits=5,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        choices=[
                            ("heart", "Heart"),
                            ("gift", "Gift"),
                            ("sparkles", "Sparkles"),
                            ("fire", "Fire"),
                            ("star", "Star"),
                            ("calendar", "Calendar"),
                        ],
                        default="calendar",
                        help_text="Icon to display for this event",
                        max_length=20,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        choices=[
                            ("red", "Red"),
                            ("orange", "Orange"),
                            ("yellow", "Yellow"),
                            ("green", "Green"),
                            ("blue", "Blue"),
                            ("purple", "Purple"),
                            ("pink", "Pink"),
                        ],
                        default="blue",
                        help_text="Color theme for this event",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this event is currently active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "seasonal_events",
                "ordering": ["month", "day"],
                "unique_together": {("name", "month", "day", "year")},
            },
        ),
    ]
